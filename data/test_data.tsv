0	TAKE THIS COURSE!! No matter what major you are, it's an extremely insightful and fun course! The structure of the course and the way it's taught is extremely effective. As someone who had never considered computer science in college, I'm not considering a major in computer science and taking more computer science courses at Stanford in the future.
0	Great course, I think everyone no matter what their major is at stanford should take this class. Very impressed with the amount of resources for student help and I think the CS department did a great job. I just started coding python during week 1 of this class and now I am pretty good at it. TAKE THIS CLASS.
0	This was a great course! Even though I didn't need to take this course for my major, CS here is popular for a reason and the introductory CS class is very beginner friendly and informative. I definitely recommend taking it regardless of major, since it gives you basic skills that might be helpful down the line, and honestly it was a lot of fund and very gratifying!
0	Take it, its really hard tho.
0	If you have no coding experience, go to lecture and office hours because the class moves fast
0	Extraordinary class, take it
0	It is a fairly simple class and all of the classes are recorded so it is nearly asynchronous.
0	ItEs a must-take class for all Stanford students! A very rewarding class that is taught well and isnEt particularly time consuming
0	I would say there was often a gap between the lecture material and the assignments. The directions to the assignments were also often inadequate. I would say this class requires outside help with things like the LAIR or other tutoring options.
0	Go to all the lectures.
0	Great introduction into computer science and python coding! The teaching staff really knows what they are doing and everything is very routine. If you put time into learning the basics the class isn't hard to do well in.
0	Take the course! I learned so much and had a lot of fun. I had no prior coding experience, so I was nervous, but it's super accessible and well organized
0	Amazing class for someone wanted to get started in python or wants a review. I had some coding familiarity going in and was taking the class for fun, and it's indeed super fun. The teacher is engaging, the assignments are well designed, and the midterm/ final are fair and reflective of what is covered in class. A must take!
0	The course moves fast. Lectures, while they can be a bit dull, are super useful at understanding the content and progressing forward. Nick is also an incredible teacher, making lectures more interesting and including real world applications of how coding can be used.
0	This is a great class for figuring out if you want to do computer science.
0	Nick is a fantastic lecturer, and Juliette and the Section Leaders all work so hard to make sure you can do your best. It's all very approachable and collaborative. It's very easy to skip lectures or even get distracted on your laptop during in-person class, but you really shouldn't because the lectures are so helpful. People say you can be a complete beginner and still thrive in this class, and that is absolutely true!
0	You have to take this course if you're a Stanford student. Very well-taught and not overly rigorous. One of the few classes that I would honestly describe as pretty fun.
0	This course is great for those new to coding. It is perhaps the best taught entry course at Stanford and very reasonable with tests. The homework is difficult so don't wait till the last minute to start assignments. Also, use LaIR to its full advantage, the students working there are so helpful.
0	I feel like this class moves too fast to actually be able to retain what you're learning.
0	Yes, I think CS is becoming more and more relevant in every single field, and this course does a great job of demonstrating a variety of applications while also being very beginner friendly!
0	I think everyone should take this class because it's a great foundation to CS and Nick is a great lecturer.
0	Great overview of the Python programming language. Age-old wisdom, but you get out of it what you put into it. Certainly a course that has a strong, consistent cadence. Quite easy to loose touch with the weekly rhythm and fall behind. Be diligent with keeping up with lectures.
0	Definitely worth taking to pick up some basic skills--it's very approachable even if you have no coding experience, the homework assignments match the content covered in class pretty well, and Nick is an engaging instructor who goes at a pace that's very easy to follow. Worth it for anyone in any major and probably the only enjoyable large introductory course I have taken at Stanford so far.
0	This course is well-taught, and you'll learn a lot of Python. I actually looked forward to doing the homework, especially since I like problem solving. I was nervous when the said the pace was fast, but I didn't think it was any faster than my other courses. Highly recommend!
0	CS 106a is a great course to take if you're looking for an introduction to programming. The homework takes a while to complete some weeks but if you start early and designate some time to it, you can definitely get it done early. Section can be a bit un-useful at times, but I do appreciate the section leaders' dedications to our learning. The midterms and finals can feel like a bit of a memorization game rather than a test on programming knowledge due to the fact that you don't get to run your code.
0	Take it if you want to learn the basics of coding! I think it's very well taught and the teaching team has set up a great system in the form of sections and additional sessions to ensure you get the necessary help
0	Great class, take it even if you are not interested in CS!
0	super helpful
0	Really interesting course
0	A lot work, but very fun!
0	This is probably the most well-taught and easy to follow CS class at Stanford. The amount you put into the class is the amount you will get out of it. There is an option to watch the lectures online but I personally think that it is better to take the class in-person because you will retain more knowledge. Make use of the Lair office hours if you are genuinely struggling to debug a code. They WILL help you. That is all I have to say, but this class is definitely worth taking in your time at Stanford. No prior knowledge is necessary.
0	Absolutely take this class! It is a right of passage; everyone files their teeth on CS 106A. Have no previous programming experience. Nick is an extremely kind and caring instructor. Go to office hours, he wants to help and will work with you to ensure your success in the class. Everyone believes in you. You got this! I am pretty sure, behind closed doors, the lair people are selected for their ability to not only teach but uplift. Lair is an incredible resource where the student instructors radiates positivity. I had too much fun! Made so many friends while learning.
0	Doing the practice problems in lecture is very helpful, and make sure you can write code from scratch before the midterm and final. Do a lot of practice problems! This class was my first exposure to coding- and I can see how it hooks so many students. Very fun!
0	Take it! It is not as easy as many say it is, and the level of difficult varies wildly for each person. For some people, the assignments take a few hours, while for me, many of them took more than twelve hours. I was a complete beginner, but the class is well-structured where you walk away with the skills to know how to code. The assignments can be pretty frustrating, and definitely start early! Do them as soon as they are released because the lecture material is still fresh in your mind.
0	This is a must take class here at Stanford. It it challenging but fun at the same time. You will learn a lot and who knows it could be something you want to pursue.
0	Take it! It's a great introduction to Python and by the fourth week, you can do a lot! Paying attention in class and participating in discussion sets you up well. There is a ridiculous amount of resources for this class from Lair to section leaders that care.
0	- Great instruction!
0	Super fun, light workload.
0	Amazing intro to CS course.
0	Nick Parlante is very good. Funny, enjoyable, and a good teacher. Bar the fact that lectures are insanely fast. Nick Parlante interacts with a massive lecture hall worth of students and brings the energy to back it up! No Nick Parlante slander as we like to say.
0	Good intro class to take, moves fast so stay on top of your work
1	Take CS 106B (especially with Keith)! You will learn so much and develop as a programmer and problem solver.
1	Great course, be sure to start work early
1	This class was a lot of work, but you'll look back at the end of the quarter and be amazed at how much you learned.
1	Take this course!!! Especially with Keith if you can. The quality of instruction is unbelievable, and the content is extremely applicable for anyone, no matter your major or degree program.
1	Take it!
1	This is a great course for anyone who is interested in computer science or wants to see what computer science is like.
1	Absolutely take it, and take it Winter quarter with no other PSET classes. It's the same case as 106A where you get out what you put into it, and the instruction is really phenomenal. It might kick your ass really hard, which is why I say take it with a light course load aside from 106B, but it really is a treat. Should you decide to stop CS after this class, you would still be well enough equipped to use your skills later on in your career, pre or post graduation. TAKE THE CLASS!!! (And if you liked Nick you will love Keith)
1	Sections and office hours as well as LAIR are highly highly recommended to do well in this class.
1	It is a good class.
1	it can be tough if work is not started on time but you learn a lot and c++ is nice.
1	This course is the best course I've taken so far at Stanford.
1	Don't take this course with Keith in the winter unless you are absolutely sure you want to do CS. This course is a ton of work and can be discouraging for someone just looking to pick up coding skills. You learn a lot more than you would in another quarter, but in my opinion it's not worth the time you have to put in unless you are sure you enjoy coding already. Save yourself the stress.
1	Great! The assignments take up a lot of time but teach a lot too
1	Be prepared to put in the work, don't take too many strenuous classes with this one
1	This course was extremely difficult, but if you have the time in your schedule to commit yourself to this class, it is useful. This class moves quickly and the assignments take up a lot of time. Keith is a great instructor, however I would recommend taking this class with a different instructor if you are not able to commit extra time to this class because Keith's version is a little different. Also, he gives an estimate of how much time it will take you to complete a test, and that estimate is very low. This class helped me decide that I no longer want to take CS classes.
1	LaIR is your most valuable resource.
1	Recursion is really hard, make sure to start assignments early and go to LAIR. Sections earlier in the week are better as you can apply things to the homework. Midterm is very challenging and make sure not to break honor code as many individuals were caught cheating, its not worth it.
1	It is tough but worth it! Make sure you set aside enough time to work on projects!
1	A very interesting and engaging course that teaches a lot both in Computer Science and beyond.
1	Keith has no sense of how hard it is for students to learn CS, which is reflected in the difficulty of assignments and exams. That aside, it was impressive and fulfilling to look back on the sheer amount of content we learned once the class was over. The class was just thoroughly unenjoyable in the moment, which was a big problem. Keep on top of classes or else you'll fail.
1	Keith is an amazing lecturer, but watch out for the work load and difficulty of the problems he sets out. The problem with having a genius as a teacher is that they will most likely not know what the average Stanford student feels like taking these concepts.
1	This class is great introuduction to data sets, classes, object, pointers, recursion techniques, big O run times and identifying different techniques for optmizing code.
1	start assignments earlier
1	Take this class. Keith is an amazing instructor!
2	Take it take it take it!!!! If you are not confident in doing well in CS107, this is the place to go. Extra office hours are more helpful than that of CS107. As a student who struggled in other infamously difficult classes, this is a life-saver. Take it with Andrew Benson if possible; he's so good at teaching and such a good person.
2	This is a great class and I would highly recommend it, especially with Julie and Pat! It's a decent amount of work, but as long as you don't fall behind, its very manageable and there are a lot of resources to help you.
2	I learned so much from this class and feel much more confident in my ability to write clean, functional and modular code. Lecture is super entertaining. Pat and Julie make lecture just the absolute best!! Aside from learning about memory, peripherals and program execution from the ground up you also get exposed to and have to learn how to use many new tools such as git, vim, GDB and the command line. Its a steep learning curve for sure and the third and fourth assignment are definitely quite challenging and tedious, however, you walk away form this class having learned so much and feeling really proud and satisfied that you actually built a computer form the ground up. If you have time you should definitely take this class!!!
2	Enjoyable class, but not as much hardware experience as you might think it isEstill much more fun than 107!
2	This class is fun but time consuming. If you like go learn from fundamental or meet cool people, go for it
2	TAKE IT. PERIOD. It might be useful to know that the amount of work peaks at assignment 3 (week 4) and 4 (week 5) and goes a bit lighter from there. But those two can be quite a bit of grind. Definitely take with a friend (or you can make friends in the class). I love how close the class gets at the end of the quarter. I really appreciate that such an amazing course is offered at Stanford. SHOUT OUT TO THE CS107E TEAM. THEY ARE AMAZING!
2	I would not recommend taking this course in a heavy quarter. Be prepared to spend time exceeding 5 units of work for this class.
2	I can't possibly recommend 107E with Pat and Julie more. They are sublime teachers with a wealth of knowledge and they are both amazing teachers and wonderful people. You will be pushed hard in this class, but it will feel so rewarding and you will learn so much that you would be foolish to pass up the opportunity to learn in this intimate environment. Take this class, take this class, take this class!
2	Take the course! It can be heavy at times, but staying on top of the work makes it manageable. Chris Gregg is also an amazing lecturer.
2	It's hard but rewarding. Although I am not a system person, the problems we tackle are interesting.
2	You have to be meticulous about heap allocator (specifically, explicit allocator). Go into it expecting it to take a long time so you'll be less prone to rush through any code or take any shortcuts. You have to build it extremely incrementally, testing thoroughly at every phase, checking that every aspect of your understanding is perfect. It will not be fun otherwise. Rest of the course isn't too challenging.
2	Start every assignment early
2	The class is challenging but rewarding! Secure vault and heap allocator take a lot of time to complete, but they are very doable so don't be scared.
2	The course is intense, and assignments become more difficult as the course progresses, with the last two specially time consuming (30-40 hours). Even though it was challenging, this is a great course, it is very well organized, and it is extremely satisfying to successfully complete the assignments. Chris Gregg is a great instructor and deeply cares about you; perhaps the best part is his availability to meet with students and support you wherever he can.
2	This is a class in which you'll learn a lot. The last 2 assignments are much longer than all prior ones, so make sure to plan in advance, but they are also the ones where you learn the most. Would totally recommend to anyone who wants to understand low-level and systems programming.
2	Would definitely recommend this to anyone interested in how software works at a low level. Material is difficult but much less busy work than 106B; just make sure to start the last 2 assignments as early as possible.
2	good course. get nick instead of chregg
2	nothing
2	This class almost broke me. It's absurd that this is allowed. Absolute weed-out class so be prepared to have every ounce of you tested. People aren't lying when they say it's hard. Do not take other hard classes during the same quarter unless it's winter and you want to be sad. Very hard, decent instruction, absurd expectations. Head TA literally said Heap Allocator takes ~40 hours and he wasn't lying. Immoral class.
2	You will learn so much but its a lot of time
2	labs and assignments are lengthy and challenging. Do not overload yourself with other courses if you are planning to take this course.
2	Honestly this class was very hard but doable. It is way more low level than other CS classes so be ready to think about bits and bytes. However, be ready for heap allocator because that assignment ate up all of my work time the last week of the quarter, which kind of ruins your other classes.
2	Great class! Make sure to start on assignments early because they often take a lot longer than you think.
2	Start things EARLY! Who knows when you will get stuck on a bug and how long it will take to figure it out. You cannot rely on office hours they are impossible to get into.
2	Take this class!! I've never said this about a class before (then again its my second quarter at Stanford) but the instruction in this class, along with the infrastructure for completing psets was fantastic. Thanks in large part to Chris, I can confidently say I came out of this class refreshed in my interest for probability and its intersection with CS. If you are interested in a CS class and don't have much prior experience (I didn't know python nor had the 103 prereq, did fine) this is the class to take.
2	This class is great! Chris is amazing and such a good professor. I wasn't really looking forward to this class, but I absolutely loved it with Chris and the things we learn are SO applicable to real life.
2	Absolutely take it! Chris Piech is fantastic. Outstanding vibes, energy, and accommodations.
2	Take it, especially if it's with Chris Piech! You will learn a lot not just about probability but being creative in applying it.
2	This course is great!! I feel like I've learned so much and Chris was an amazing lecturer.
2	I recommend this course. I learned a lot and never felt like I was falling majorly behind. The teaching staff was always prepared to answer questions.
2	Good fun class. Be wary as the course has a stiff learning curve near the end of the quarter as it delves into machine learning.
2	Really great intro course with an amazing teaching team.
2	Definitely take this class! Chris Piech and the teaching team did a great job making the class a fun way to learn about probability and be introduced to machine learning. It is very well designed and organized. Try to start homeworks early (especially if you aren't familiar with the material) and do the practice exams.
2	Very interesting and applicable content. Chris is amazing and his new PSET app helped me understand the content so well. Definitely recommend this class!!
2	"Overall this is a pretty chill class but unfortunately, it was also very disappointing for me. If you actually want to learn probability at a deep level, this is not the course for you and I highly recommend you take additional courses like Math 151 (when taught by a good prof) or some stats classes to supplement CS109 if you have to take it. The course definitely had its moments - I think they did a pretty good job of teaching most combinatorics topics and the instruction on random variables was solid for an intro course. However, a lot of the harder concepts are taught in a super hand-waivey fashion and the theory is rushed or just not even covered so it's very challenging to build a strong mathematical intuition/understanding of what's going on even if you read the course reader. Often concepts are introduced in the context of a pseudocode algorithm (that they will expect you to reproduce in the homework) and little to no background is given on the math/theory that the algorithm is based on. So you end up coding these algorithms out of your ass on the homework and not really understanding why it works/the motivation for it. For example, they did this with bootstrapping and p-values which actually aren't that complicated but they make it confusing by giving you an algorithm for generating a p-value and just being like ""yeah so that's how you get a p-value and it tells you whether or not your measurement was statistically significant, ta-da!"" Instead they should've provided background on hypothesis testing so we understand what a p-value is and where it comes from, then showed us the algorithm. Luckily the midterm was very chill and Chris is very understanding about grades and extensions. The homeworks are also not bad. Usually each homework has 1 or 2 problems that are kind of tricky, but overall they are very mellow. However, the final was actually absurd. I went into that test feeling really good about my understanding of the material and ready to show what I learned. But at least half of the final consisted of probability questions that we had to answer in the form of pseudocode. It did not seem like a probability test at all and a lot really cool topics were left off the final.No disrespect to Chris. I think he's a great guy and seems like a very dedicated dad, but I wasn't a fan of his class."
1	This course will have you thinking about math in a very different way if you've never taken a theory class before. The grading can be very detail-oriented for the proofs so make sure you follow the templates and the rules that are clearly laid out for you. Office hours are very hard to get into because they fill up quickly so be the first one there, or ask questions on Ed. It's very convenient that the lectures are recorded so you can watch them at your own pace. Working together with a PSET partner is very beneficial, so make sure you find a good partner and also do some of the work for each problem.
1	take the course with cynthia and make sure you have a really good PSET partner who you work well with. If you do both of these things the course will be easy and stress free
1	If you don't have mathematical maturity, this class if for you. I wish I had taken it before Math 51 for example... it teaches you how to read and write Math in a very effective way
1	Great class, a lot of work but doable :)
1	You need to understand the material to pass the class, regardless of how much time you put into it. It's definitely a more conceptual class than a lot of CS classes out there and is definitely challenging for many, so don't feel bad if you struggle in this class.
1	I liked this course! I found it very, very difficult however. Psets took up an extremely great deal of my time and concepts were challenging. The course is well organized. Cynthia is great and extremely supportive.
1	Very hard, be prepared and goto office hours
1	Professor Bailey Lee is incredible at making difficult material understandable.
1	I would say definitely consider taking it if you have a strong knowledge of discrete math and/or how to write mathematical proofs. If not, I would still recommend it, it's just that it will take a bit more time to understand all the materials, especially how to do the problem sets (since I had to go through this).
1	CS103 is challenging, but conquerable, even if you have no background in writing proofs/this type of material. I wouldn't have taken it if not for SymSys, and it might not have been my favorite class in all (it's particularly tedious/not necessarily applicable at times), but there are undoubtedly moments where you come to a rewarding revelation and you forget how much energy it took to generate the result or write up prior dense proofs. I'd recommend trying to become used to not getting everything as soon as possible; it's tempting to want to hammer away until you have a perfect PSet, but it's impractical and hardly feasible, especially if working solo.
1	It is a fun class if you like logic puzzles. Be sure to strictly adhere to the specific format/syntax presented in lecture, as the teaching staff marks down for not doing so.
1	Work on the PSETS early as they can take a while. You should work with a partner as well.
2	It is more work than expected but very thorough.
2	TA team is amazing, coursework is interesting and covers a lot, quite exhausting so try to avoid taking it in a relatively hard and busy quarter.
2	ouch
2	Keep up with lectures, as we move through concepts quickly.
2	This is an interesting but tough class. I did well in the pre-reqs but found this to be the hardest class conceptually in the core. There's a problem or two on every PSET that are near-unsolvable without going to OH, so if you want to minimize your time in the class, definitely make use of it. That said, the whole point of the class is that you are able to come up with algorithms for tough problems, so if you want to make the most of the class, try to only go to OH once you're really stuck; for the few topics I went to OH on after only working on a problem for a couple hours, I ended up not being able to figure out related problems on my own on the midterm/final. All in all, it's a good class, but beware that the lectures don't prepare you to solve all the problems like they largely did in CS 103, so try to find a good balance between grit and seeking help at OH.
2	I would tell the student that homework requires a significant amount of time, and to make sure to go over problems with peers to make sure that they didn't make any silly mistakes that could easily be fixed.
2	Honestly don't take this unless it's taught better
2	It is definitely a challenging course but will be rewarding in the end. Utilize office hours and don't fall behind on lectures.
2	Challenging course but better if you attend in person and use all of the resources they give to you!
2	Great course but very time-consuming! Start psets early and go to office hours. Exams are very tough.
2	The lectures are super clear and well organized. I thought that Nima and Moses are both clear and conscientious instructors. However, the homeworks can be unnecessarily long and vague, and the TAEs are not always prepared to concisely explain topics.
2	asf
2	I really enjoyed a lot of the content in 161, but the class logistics were a messed up. Our homework took forever to grade (3+ weeks sometimes), they gave us a midterm that took more than twice as long as they told us it would, and a lot of the TAs never showed up to office hours.
2	This course is quite difficult, not only because of the content itself, but because of the instruction and learning gap between lectures and psets.
2	Likely redundant for most students, but required for the major.
2	Go to office hours. The grading is very harsh and you're unlikely to do well without attending office hours and getting clarification from a TA on the expected answers and what is needed to fulfill the rubric. A small mistake could cost you a lot of marks as there's almost no credit given for partial solutions. Also, make sure you stay on top of the forums, often the homework questions are unclear, and you might need to rewrite your solutions after the clarifications are posted.
2	"The slides and course material are good. The lecturer also teaches the course well.However, you may not expect responsible TAs in the class. Often, the questions in discussion forum can be solved in time. And the TAs make many mistaking in grading. You'd better propose exactly the same answer as the solution by going to office hour. Otherwise, it is very likely that your hw can be graded incorrectly. There is even a case that I lose credit because of ""too much"" demonstration."
2	Great class. Can be difficult at times but take advantage of office hours and the course staff.
2	Find a good TA who will carry you through. Find a supportive group of people to work with. This class is very, very challenging and the psets will not be a good time. That being said, if you put in the time, you'll learn a lot! The content is actually very interesting and relevant to technical coding interviews.
2	I would emphasize learning a small bit of probability to be able to seamlessly jump in. Otherwise the class is pretty beginner friendly.
2	Really useful and interesting class -- the lecturers try to make it as engaging as possible!
2	An extreme, ridiculous amount of work.
2	Great class. Really fun to work on all of the interesting problems on psets. Take it!
2	Good class to learn algorithms and problem solving techniques, but just be aware that class averages for assignments/exams are super high
2	Essential topic for a lot of CS so you'll probably have to take it, but you can probably get the same experience doing enough leetcode. There are some really great TAs but the teaching staff as a whole could be relied upon to provide confusing information, delivered an extremely poorly thought out midterm, and for some reason never knew the solutions to homework so getting advice was always a mixed bag.
2	This course is difficult but can be interesting. PSets may vary in difficulty
2	This class was super hard for me, perhaps the hardest class in the CS core. That being said, it was also the class where I learned the most about how to be a better programmer and think critically. (Bonus: as someone who has interviewed / done coding challenges and OAs for internships before taking 161, I can definitely say this class makes it 1000% easier - a lot of the algorithms we learned about are very relevant to coding interviews). In addition, the material is genuinely interesting and engaging. It's definitely a challenging course, though. The material is not always easy to understand and internalize, and part of the difficulty is just applying your knowledge to various situations and creatively thinking. I would recommend starting psets as early as possible and going to office hours for sure. Try to stay on top of the material as it does pile up, especially towards the final exam. The later half of the course was harder than the first half, imo.
2	A great course for an introduction to algorithms. I would suggest taking it with a lighter course load.
2	Psets are time consuming, but  you will learn a lot about how to design algorithms well.
2	This class takes a lot of work and prepare to spend a lot of time on problem sets.
2	Things get more interesting the second half of class. Long weekly psets so plan accordingly.
2	Make sure you understand the concepts throughly. Try teaching the course to an innocent friend who is fairly smart but never learned about algorithms. It can help you a great deal.
2	It is definitely fast paced, and the quarter I took it (Winter 2022) seemed especially hard compared to previous quarters. The lectures and problem sets take a non-trivial amount of time, and there is a PSET every week. The midterm and final are also very difficult.
2	This course is amazing! It is a must-take for anyone pursuing any technical / engineering degree at Stanford. Every field uses algorithms in some form or fashion. This course gives you an immense understanding and appreciation for algorithms and data structures that is super helpful for anyone in an engineering or technical field.
2	This class is unfortunately taught badly. Moses seems like he doesn't care about anyone. Was so set on getting those who were cheating, neglected providing empathy about the events of the world and on campus.
2	Not a great class. Only take it if you absolutely have to (in which case I feel sorry for you).
2	This course will probably take up most of your time. Make sure to take it with easier courses!
2	It's a hard class and this year had a chaotic honor code mess. The professors are fine people (I guess) but are really lazy (i.e. most if not all responsibilities fall on TAs like writing exams and all other logistics) while they just read off of Mary Wooter's slides. By far the worst CS core class. But I guess its a necessary evil. Take it only if you need to.
2	really important and helpful class, it will help you design much more efficient code
2	I mean youre taking it cuz its required, but its better than 107 or 103, and feels more applicable.
2	"The slides and course material are good. The lecturer also teaches the course well.However, you may not expect responsible TAs in the class. Often, the questions in discussion forum can be solved in time. And the TAs make many mistaking in grading. You'd better propose exactly the same answer as the solution by going to office hour. Otherwise, it is very likely that your hw can be graded incorrectly. There is even a case that I lose credit because of ""too much"" demonstration."
2	Don't skip lecture.
2	This class is hard, but extremely rewarding if you put in time. Take it with Gene if you can. I literally learned so much in this class in such a short period of time. Math 51 opens yourself to so many opportunities/applications in so many fields.
2	This class is terrible E for everyone. I thought I would be fine because I had already taken MultiV, but I must have been delusional.
2	This is a very fast-paced class. There also is a lot of reading to do in every class.
2	Which prof you get really matters, which is very unfair
2	Watch 3Blue1Brown!!!!
2	If you put the work in and don't get behind on understanding lecture concepts, this course is definitely doable. Make sure to do the psets for the problems from lecture after the lecture where they are taught.
2	Don't shy away from Math 51 - I've learned more than I have in any math class and gained a much deeper appreciation for the subject. If you can stay on top of content (take notes on every pre reading, complete all discussion worksheets, understand the homework), which is not an easy task, you will get a good grade. That said, a strong foundation in math, particularly with math without a calculator, is crucial. Math 21 material isn't as relevant, but Calc (derivatives), Algebra II (comfort with factoring large polynomials) and PreCalc (hyperbolas, ellipses, trig) comes in handy a lot. The only thing that I think is slightly unfair about the class is that I almost ran out of time on every midterm / final.
2	This is a very difficult course, and if you do not understand the material, you may get left behind even if you try to engage in the many resources the course offers.
2	This is a great course, but it moves too quickly for us to truly understand what is happening. The material seems relevant, but I wouldn't really know; we blew past a year's worth of material in ten weeks to the point where I don't really understand what happened this quarter.
2	This course is difficult without a good basis for linear algebra concepts. Highly recommend for taking it regardless, since it includes concepts that are useful for many majors (esp. STEM related). Utilizing office hours and external resources (for visualization) definitely help.
2	Reading the textbook is critical to doing well on exams -- not everything on exams is covered during lecture. Keep up and you'll be fine. Make sure to not fall behind
2	Very time-intensive course, if you are thinking of taking this course for a major requirement, make sure to prioritize this class and stay on top of the readings and psets.
2	It's Math 51. Not much left to add to what's already been said. Although it's an unpopular ranking, I would rank the lecturers in the following order: Mark>Jinyoung>Gene. Mark explains the concepts and intuition behind what we're learning a lot better than the other two lecturers. Jinyoung goes through examples in the clearest way and she is great at answering questions and overall being really supportive. Gene goes through a ton of examples in lecture and he wrote the exams in my quarter so he would give some insights that the other profs wouldn't. He was also the only lecturer that would post their annotated notes; he's a legend for that. Overall the course covers so much content and I struggled finding motivation to finish all the psets but the linear algebra is interesting and satisfying when you understand it. It's part of the stanford experience, don't hesitate to take it. Just get it over with.
2	It does actually teach useful math.
2	This class is challenging but doable. Stay on top of work and read the text book.
2	Difficult class but had to do it for a major requirement
2	Be prepared to still turn in assignments and take your tests even if you're on your death bed. I had multiple friends this quarter who had pretty serious conditions to allow exceptions to be made and the Math department wouldn't budge (i.e. one was hit by a car, and the other broke her finger, and neither got any leniency). Also put together a study group because that will save you.
2	please take this if you are questioning how well you will do in Math 51, it is incredibly helpful
2	Learn to use outside resources, kahn academy, etc. The teachers are pretty good but the class moves so fast that if you are not solid on one topic while its being taught in class/ going over it in discussion, the class will move on anyways and not mention the topic again. It will only come up later on a midterm/final.
2	Math 51 is set up pretty well from a teaching standpoint. It's taught by a few different people. Jinyoung Park is an excellent lecturer - she talks pretty quickly but her teaching is very thorough. All attendance is optional. The math department as a whole is really bad with virtual accommodation - it is never streamed/recorded/etc, no matter what. The department is also super strict on late work, they don't accept any at all. Even though you don't have to go to section, doing the worksheets at least can be really useful practice, and the TAs are good at helping students understand the material.
2	Very difficult class.
2	Don't take it, do stats instead.
